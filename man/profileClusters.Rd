\name{profileClusters}
\alias{profileClusters}
\title{
Compute enrichment/depletion ratio for the observed epigenetic profiles
in epigenetic clusters.
}
\description{
The function computes the ratio between the proportion of
epigenetic mark presence in the clusters given as input and that
observed for all elements. Results are returned as a numerical
matrix, easily visualized in the shape of a classical heatmap.
}
\usage{
profileClusters(x, uniqueCount = TRUE, clus, i, minpoints, merged = FALSE, log2 = TRUE, plt = FALSE)
}
\arguments{
  \item{x}{
Genes * Factors matrix or data frame used for generating epigene
clusters, indicating 1 for binding of factor j in gene i, 0 otherwise.
}
\item{uniqueCount}{
Logical value to indicate if clusters come from epigenes (identical rows
in x are merged into a single one) or genes (every row in x is
mantained). See help for \code{uniqueCount} for details.
}
\item{clus}{
\code{clusGPS} object with epigenetic clusters generated from pairwise
distances from x, as generated by the \code{clusGPS} function. See help
for \code{distGPS} and \code{clusGPS} for details.
}
\item{i}{
Clustering entry from which cluster profiling is to be computed.
}
  \item{minpoints}{
(Optional). Ignore clusters with fewer than minpoints, deprecated.
}
\item{merged}{
(Optional). If clusters provided have been previously merged or not, deprecated.
}
\item{log2}{
Logical to indicate if enrichment/depletion proportions are returned in
log2 scale. Defaults to TRUE.
}
\item{plt}{
Deprecated.
}
}
\value{
A numerical matrix with the enrichment/depletion profile of the
epigenetic marks for each cluster provided in the \code{clusGPS}
object. Easy to visualize for instance with a heatmap plot.
}
\author{
Oscar Reina.
}
\seealso{
\code{distGPS} for computing pairwise distances between epigenetic
elements. \code{clusGPS} for computing epigenetic clusters.
}
\examples{
# Not run
# data(s2)
# # Computing distances
# d <- distGPS(s2.tab,metric='tanimoto',uniqueRows=TRUE)
# # Creating MDS object
# mds1 <- mds(d,type='isoMDS')
# mds1
# plot(mds1)
# Precomputing clustering
# h <- hclust(as.dist(d@d),method='average')
# # Calculating densities (contours and probabilities), takes a while
# clus <- clusGPS(d,mds1,preMerge=TRUE,k=max(cutree(h,h=0.5)))
# Computing cluster profiles
# p1 <- profileClusters(s2.tab, uniqueCount = TRUE, clus, i=125, minpoints=30, log2 = TRUE, plt = FALSE)
# Requires gplots
# heatmap.2(p1,col=redblue(100))
}
\keyword{ ~clustering }
\keyword{ ~heatmap }
